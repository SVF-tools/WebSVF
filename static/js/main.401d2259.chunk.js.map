{"version":3,"sources":["api/webSvfApi.ts","themes/defaultTheme.ts","components/ThemeProvider.tsx","store/actionts.ts","store/reducers.ts","store/store.ts","Providers.tsx","components/Layout/LayoutToolbar.tsx","components/Layout/ProjectsTreeView.tsx","components/Layout/LayoutDrawer.tsx","components/Layout/Layout.tsx","components/RenderSvg.tsx","components/Editor.tsx","components/Pages/Analysis.tsx","components/Pages/LandingPage/NavBar.tsx","components/Pages/LandingPage/components/Contributors.tsx","components/Pages/LandingPage/components/MastHead.tsx","components/Pages/LandingPage/About.tsx","components/Pages/LandingPage/LandingPage.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GraphType","themeOptions","defaultThemeFactory","createMuiTheme","globalCss","css","AppStyle","createGlobalStyle","ThemeProvider","children","theme","NoSsr","webSvfApiFactory","client","axios","create","baseURL","webSvgApi","analyse","a","graphName","fileName","code","post","response","data","analyseAll","getProjects","get","projectsUpdated","createAction","selectedFileUpdated","webSvfApi","reducers","type","state","action","projects","payload","selectedFile","store","configureStore","reducer","createReducer","defaultTheme","Providers","CssBaseline","LayoutToolbar","AppBar","position","color","Toolbar","Typography","variant","StyledTreeItemContent","styled","div","palette","text","secondary","spacing","hover","grey","StyledTreeItem","TreeItem","CustomTreeItem","labelIcon","labelText","labelInfo","rest","label","FileTreeItem","file","nodeId","id","name","FolderTreeItem","folder","files","map","ProjectTreeItem","project","folders","ProjectsTreeView","useSelector","dispatch","useDispatch","useEffect","length","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultExpanded","onNodeSelect","event","x","reduce","b","concat","find","StyledDrawer","Drawer","transitions","easing","sharp","duration","enteringScreen","LayoutDrawer","open","StyledLayout","Main","main","Layout","transform","node","index","attribs","viewBox","viewbox","xmlnsXlink","i","convertNodeToElement","strokeWidth","child","textAnchor","fontFamily","fontSize","strokeDasharray","RenderSvg","output","onGraphClick","handleOnClickRef","useRef","handleOnClick","e","current","clearTimeout","window","setTimeout","innerHtml","target","innerHTML","splitString","split","lineElementIndex","findIndex","value","lineNumber","parseInt","markers","startRow","endRow","className","startCol","endCol","annotations","row","column","document","querySelector","xmlDoc","DOMParser","parseFromString","Array","from","getElementsByTagName","filter","test","forEach","addEventListener","ReactHtmlParser","Editor","mode","onChange","wrapEnabled","style","width","height","graphNames","Callgraph","Icfg","Pag","Svfg","Vfg","HomeWrapper","HomeContainer","Container","HomePaper","Paper","ScrollablePaper","StaticButtonGroup","ButtonGroup","Console","getLogPrefix","Date","Analysis","useState","loading","setLoading","editorContainerRef","consoleHeight","setConsoleHeight","logs","setLogs","editorContent","setEditorContent","anlyseDropdownOpen","setAnlyseDropdownOpen","analyseDropdownRef","React","selectedGraph","setSelectedGraph","svgs","setSvgs","content","setOutput","setMarkers","setAnnotations","handleClose","contains","onAnalyseClick","basicLog","clangBugLog","svfBugLog","getBoundingClientRect","maxWidth","Grid","container","maxHeight","ref","display","overflow","onResize","d","el","defaultSize","minHeight","minWidth","Button","onClick","size","prevOpen","disabled","Popper","anchorEl","role","undefined","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","Object","values","key","MenuItem","selected","graph","console","log","Backdrop","zIndex","CircularProgress","Nav","nav","NavBar","to","replace","fontWeight","Contributors","heading","developers","supervisors","developer","href","link","rel","src","image","alt","universityLink","university","supervisor","MastHead","onNext","email","setEmail","placeholder","required","About","contributors","LandingPage","ANALYSIS_PATH","Routes","history","useHistory","path","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.401d2259.chunk.js","sourcesContent":["import axios, { AxiosResponse } from 'axios';\nimport { IProject } from '../models/project';\n\nexport enum GraphType {\n  Callgraph = 'callgraph',\n  Icfg = 'icfg',\n  Pag = 'pag',\n  Svfg = 'svfg',\n  Vfg = 'vfg'\n}\n\nexport interface IAnalyseProps {\n  graphName: GraphType;\n  fileName: string;\n  code: string;\n}\n\ntype AnalyseAllResponseType = Record<GraphType, string> & { logs: any };\n\nexport interface IWebSvfApi {\n  analyse: (props: IAnalyseProps) => Promise<string>;\n  analyseAll: ({ fileName, code }: { fileName: string; code: string }) => Promise<AnalyseAllResponseType>;\n  getProjects: () => Promise<IProject[]>;\n}\n\nexport const webSvfApiFactory: () => IWebSvfApi = () => {\n  const client = axios.create({\n    baseURL: 'https://api.websvftechnology.com'\n  });\n\n  const webSvgApi: IWebSvfApi = {\n    analyse: async ({ graphName, fileName, code }) => {\n      const response = await client.post<IAnalyseProps, AxiosResponse<any>>('/analysis/' + graphName, {\n        code: code,\n        fileName: fileName\n      });\n\n      return response.data[graphName] as string;\n    },\n    analyseAll: async ({ fileName, code }) => {\n      const response = await client.post<IAnalyseProps, AxiosResponse<AnalyseAllResponseType>>('/analysis/all', {\n        code: code,\n        fileName: fileName\n      });\n\n      return response.data;\n    },\n    getProjects: async () => {\n      const response = await client.get<IAnalyseProps, AxiosResponse<IProject[]>>('/projects');\n\n      return response.data;\n    }\n  };\n\n  return webSvgApi;\n};\n","import createMuiTheme, { ThemeOptions as MuiThemeOptions } from '@material-ui/core/styles/createTheme';\nimport { IThemeFactory } from './themeFactory';\n\nconst themeOptions: MuiThemeOptions = {};\n\nconst defaultThemeFactory: IThemeFactory = () => createMuiTheme(themeOptions);\n\nexport default defaultThemeFactory;\n","import React from 'react';\nimport { ThemeProvider as MuiThemeProvider, Theme as MuiTheme } from '@material-ui/core/styles';\nimport { createGlobalStyle, ThemeProvider as StyledThemeProvider, css } from 'styled-components';\nimport NoSsr from '@material-ui/core/NoSsr';\n\ninterface IThemeProviderProps {\n  theme: MuiTheme;\n}\n\nconst globalCss = css`\n  *,\n  :after,\n  :before {\n    box-sizing: border-box;\n    font-family: Roboto, sans-serif;\n    letter-spacing: 1.5px;\n  }\n`;\n\nconst AppStyle = createGlobalStyle`${globalCss}`;\n\nexport const ThemeProvider: React.FC<IThemeProviderProps> = ({ children, theme }) => {\n  return (\n    <NoSsr>\n      <MuiThemeProvider theme={theme}>\n        <StyledThemeProvider theme={theme}>\n          <AppStyle />\n          {children}\n        </StyledThemeProvider>\n      </MuiThemeProvider>\n    </NoSsr>\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\nimport { webSvfApiFactory } from '../api/webSvfApi';\nimport { IFile } from '../models/file';\nimport { IProject } from '../models/project';\nimport { IStore } from './store';\nimport { ThunkResultAction } from './thunkResultAction';\n\nexport const projectsUpdated = createAction<IProject[]>('projectsUpdated');\nexport const selectedFileUpdated = createAction<IFile>('selectedFileUpdated');\n\nconst webSvfApi = webSvfApiFactory();\n\nexport const fetchProjects: ThunkResultAction<never, void, IStore> = () => {\n  return async (dispatch) => {\n    const projects = await webSvfApi.getProjects();\n    dispatch(projectsUpdated(projects));\n  };\n};\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { IFile } from '../models/file';\nimport { IProject } from '../models/project';\nimport { projectsUpdated, selectedFileUpdated } from './actionts';\nimport { IStore } from './store';\n\nexport interface IReducers<T> {\n  [key: string]: { (state: T, action: PayloadAction<any>): void };\n}\n\nexport const reducers: IReducers<IStore> = {};\n\nreducers[projectsUpdated.type] = (state: IStore, action: PayloadAction<IProject[]>) => {\n  state.projects = action.payload;\n};\n\nreducers[selectedFileUpdated.type] = (state: IStore, action: PayloadAction<IFile>) => {\n  state.selectedFile = action.payload;\n};\n","import { configureStore, createReducer } from '@reduxjs/toolkit';\nimport { IFile } from '../models/file';\nimport { IProject } from '../models/project';\nimport { reducers } from './reducers';\n\nexport interface IStore {\n  projects?: IProject[];\n  selectedFile?: IFile;\n}\n\nconst initialStoreState: IStore = {};\n\nexport const store = configureStore({ reducer: createReducer(initialStoreState, reducers) });\n","import React from 'react';\nimport defaultThemeFactory from './themes/defaultTheme';\nimport { ThemeProvider } from './components/ThemeProvider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst defaultTheme = defaultThemeFactory();\n\nexport const Providers: React.FC = ({ children }) => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <ThemeProvider theme={defaultTheme}>\n          <CssBaseline />\n          {children}\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nexport const LayoutToolbar: React.FC = () => {\n  return (\n    <AppBar position='static' color='primary'>\n      <Toolbar>\n        <Typography variant='h4'>WEBSVF</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem, { TreeItemProps } from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjects, selectedFileUpdated } from '../../store/actionts';\nimport { IStore } from '../../store/store';\nimport { IProject } from '../../models/project';\nimport { IFolder } from '../../models/folder';\nimport { IFile } from '../../models/file';\nimport { SvgIconProps } from '@material-ui/core';\nimport { IThemeProps } from '../../themes/theme';\nimport Typography from '@material-ui/core/Typography';\n\nconst StyledTreeItemContent = styled.div`\n  color: ${({ theme }: IThemeProps) => theme.palette.text.secondary};\n  display: flex;\n  padding: ${({ theme }: IThemeProps) => theme.spacing(1)};\n\n  &:hover {\n    background-color: ${({ theme }: IThemeProps) => theme.palette.action.hover};\n  }\n\n  &:focus {\n    background-color: var(--tree-view-bg-color, ${({ theme }: IThemeProps) => theme.palette.grey[400]});\n  }\n  & > p {\n    flex-grow: 1;\n    padding-left: ${({ theme }: IThemeProps) => theme.spacing(1)};\n  }\n`;\n\nconst StyledTreeItem = styled(TreeItem)`\n  --tree-view-color: #1a73e8;\n  --tree-view-bg-color: #e8f0fe;\n`;\n\ninterface ICustomTreeItem extends Omit<TreeItemProps, 'label'> {\n  labelIcon: React.ReactElement<SvgIconProps>;\n  labelText: string;\n  labelInfo?: string;\n}\n\nconst CustomTreeItem: React.FC<ICustomTreeItem> = ({ labelIcon, labelText, labelInfo, ...rest }) => {\n  return (\n    <StyledTreeItem\n      label={\n        <StyledTreeItemContent>\n          {labelIcon}\n          <Typography variant='body2'>{labelText}</Typography>\n          <Typography variant='caption' color='inherit'>\n            {labelInfo}\n          </Typography>\n        </StyledTreeItemContent>\n      }\n      {...rest}\n    />\n  );\n};\n\ninterface IFileTreeItemProps {\n  file: IFile;\n}\n\nconst FileTreeItem: React.FC<IFileTreeItemProps> = ({ file }) => {\n  return <CustomTreeItem nodeId={file.id} labelText={file.name} labelIcon={<DescriptionIcon />} />;\n};\n\ninterface IFolderTreeItemProps {\n  folder: IFolder;\n}\n\nconst FolderTreeItem: React.FC<IFolderTreeItemProps> = ({ folder }) => {\n  return (\n    <CustomTreeItem nodeId={folder.id} labelText={folder.name} labelIcon={<FolderIcon />}>\n      {folder.files.map((file) => (\n        <FileTreeItem key={file.id} file={file} />\n      ))}\n    </CustomTreeItem>\n  );\n};\n\ninterface IProjectTreeItemProps {\n  project: IProject;\n}\nconst ProjectTreeItem: React.FC<IProjectTreeItemProps> = ({ project }) => {\n  return (\n    <CustomTreeItem nodeId={project.id} labelText={project.name} labelIcon={<AccountTreeIcon />}>\n      {project.folders.map((folder) => (\n        <FolderTreeItem key={folder.id} folder={folder} />\n      ))}\n    </CustomTreeItem>\n  );\n};\n\nexport const ProjectsTreeView: React.FC = () => {\n  const projects = useSelector((store: IStore) => store.projects);\n  const selectedFile = useSelector((store: IStore) => store.selectedFile);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!projects) {\n      dispatch(fetchProjects());\n    }\n  }, [dispatch, projects]);\n\n  useEffect(() => {\n    if (projects && !selectedFile) {\n      const file = projects[0].folders[0].files[0];\n      dispatch(selectedFileUpdated(file));\n    }\n  }, [dispatch, projects, selectedFile]);\n\n  const onNodeSelect = (nodeId: string) => {\n    if (!projects || selectedFile?.id === nodeId) {\n      return;\n    }\n\n    const files = projects\n      .map((x) => x.folders)\n      .reduce((a, b) => a.concat(b), [])\n      .map((x) => x.files)\n      .reduce((a, b) => a.concat(b));\n    const file = files.find((x) => x.id === nodeId);\n    if (file) {\n      dispatch(selectedFileUpdated(file));\n    }\n  };\n\n  return projects && projects.length > 0 ? (\n    <TreeView\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      defaultExpanded={[projects[0].id, projects[0].folders[0].id, projects[0].folders[0].files[0].id]}\n      onNodeSelect={(event: React.ChangeEvent<{}>, nodeId: string) => onNodeSelect(nodeId)}>\n      {projects?.map((project) => (\n        <ProjectTreeItem key={project.id} project={project} />\n      ))}\n    </TreeView>\n  ) : (\n    <></>\n  );\n};\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport styled from 'styled-components';\nimport { IThemeProps } from '../../themes/theme';\nimport { ProjectsTreeView } from './ProjectsTreeView';\n\nconst StyledDrawer = styled(Drawer)`\n  && {\n    & > div {\n      white-space: nowrap;\n      position: relative;\n      width: ${({ theme }: IThemeProps) => theme.spacing(30)}px;\n      transition: ${({ theme }: IThemeProps) =>\n        theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen\n        })};\n    }\n\n    position: relative;\n    white-space: nowrap;\n    width: ${({ theme }: IThemeProps) => theme.spacing(30)}px;\n    margin-top: ${({ theme }: IThemeProps) => theme.spacing(2)}px;\n  }\n`;\n\nexport const LayoutDrawer: React.FC = () => {\n  return (\n    <StyledDrawer variant='permanent' open>\n      <ProjectsTreeView />\n    </StyledDrawer>\n  );\n};\n","import React from 'react';\nimport { LayoutToolbar } from './LayoutToolbar';\nimport { LayoutDrawer } from './LayoutDrawer';\nimport styled from 'styled-components';\n\nconst StyledLayout = styled.div`\n  display: flex;\n`;\n\nconst Main = styled.main`\n  flex-grow: 1 !important;\n  height: 100vh !important;\n  overflow: auto !important;\n`;\n\nexport const Layout: React.FC = ({ children }) => {\n  return (\n    <StyledLayout>\n      <LayoutDrawer />\n      <Main>\n        <LayoutToolbar />\n        {children}\n      </Main>\n    </StyledLayout>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { IAnnotation, IMarker } from 'react-ace';\nimport ReactHtmlParser, { convertNodeToElement, Transform } from 'react-html-parser';\n\nconst transform: Transform = (node, index) => {\n  if (node.type === 'tag') {\n    if (node.name === 'svg') {\n      const children = node.children as any[];\n      const { viewbox: viewBox, 'xmlns:xlink': xmlnsXlink, ...rest } = node.attribs;\n\n      return (\n        <svg key={index} viewBox={viewBox} xmlnsXlink={xmlnsXlink} {...rest}>\n          {children.map((x, i) => convertNodeToElement(x, i, transform))}\n        </svg>\n      );\n    }\n\n    if (node.name === 'polygon') {\n      const children = node.children as any[];\n      const { 'stroke-width': strokeWidth, ...rest } = node.attribs;\n\n      return (\n        <polygon key={index} strokeWidth={strokeWidth} {...rest}>\n          {children.map((x, i) => convertNodeToElement(x, i, transform))}\n        </polygon>\n      );\n    }\n\n    if (node.name === 'text') {\n      const child = node.children[0];\n      const { 'text-anchor': textAnchor, 'font-family': fontFamily, 'font-size': fontSize, ...rest } = node.attribs;\n      return (\n        <text key={index} textAnchor={textAnchor} fontFamily={fontFamily} fontSize={fontSize} {...rest}>\n          {convertNodeToElement(child, index, transform)}\n        </text>\n      );\n    }\n\n    if (node.name === 'path') {\n      const { 'stroke-dasharray': strokeDasharray, ...rest } = node.attribs;\n      return <path key={index} strokeDasharray={strokeDasharray} {...rest} />;\n    }\n  }\n};\n\nexport interface IOnGraphClickProps {\n  markers: IMarker[];\n  annotations: IAnnotation[];\n}\n\nexport interface IRenderSvgProps {\n  output: string;\n  onGraphClick: (props: IOnGraphClickProps) => void;\n}\n\nconst RenderSvg: React.FC<IRenderSvgProps> = ({ output, onGraphClick }) => {\n  const handleOnClickRef = useRef<number>();\n\n  const handleOnClick: EventListenerOrEventListenerObject = (e) => {\n    if (handleOnClickRef.current) {\n      clearTimeout(handleOnClickRef.current);\n    }\n\n    handleOnClickRef.current = window.setTimeout(() => {\n      const innerHtml = (e.target as Element).innerHTML;\n\n      var splitString = innerHtml.split(' ');\n\n      let lineElementIndex = splitString.findIndex((value) => {\n        return value === 'ln:';\n      });\n\n      //ace editor line number starts from 0 although users can see it start from one in frontend\n      var lineNumber = parseInt(splitString[lineElementIndex + 1]) - 1;\n\n      const markers: IMarker[] = [\n        {\n          startRow: lineNumber,\n          endRow: lineNumber + 1,\n          type: 'text',\n          className: 'test-marker',\n          startCol: 0,\n          endCol: 10\n        }\n      ];\n\n      const annotations: IAnnotation[] = [\n        {\n          row: lineNumber,\n          column: 3,\n          text: innerHtml,\n          type: 'info'\n        }\n      ];\n      onGraphClick({ markers: markers, annotations: annotations });\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (document.querySelector(`#graph0`)) {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(output, 'text/xml');\n\n      let text = Array.from(xmlDoc.getElementsByTagName('g'));\n\n      let filtered = text\n        .filter(\n          (value) =>\n            /\\{[\\s]+ln:[\\s]+[0-9]+[\\s]+cl:[\\s]+[0-9]+[\\s]+fl:[\\s]+[a-z]+\\.c[\\s]+\\}/.test(value.innerHTML) ||\n            /\\{[\\s]+in[\\s]+line:[\\s]+[0-9]+[\\s]+file:[\\s]+[a-z]+\\.c[\\s]+\\}/.test(value.innerHTML)\n        )\n        .map((value) => {\n          return value.id;\n        });\n\n      filtered.forEach((value) => {\n        if (value !== 'graph0') {\n          document?.querySelector(`#${value}`)?.addEventListener('click', handleOnClick);\n        }\n      });\n    }\n  });\n\n  if (output) {\n    return <>{ReactHtmlParser(output, { transform: transform })}</>;\n  }\n\n  return <div></div>;\n};\n\nexport default RenderSvg;\n","import React from 'react';\nimport AceEditor, { IAnnotation, IMarker } from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-json';\nimport 'ace-builds/src-noconflict/theme-terminal';\nimport 'ace-builds/webpack-resolver';\n\nexport interface IEditorProps {\n  name?: string;\n  markers: IMarker[];\n  annotations: IAnnotation[];\n  mode?: string | object;\n  onChange?: (value: string, event?: any) => void;\n  wrapEnabled?: boolean;\n  value?: string;\n}\n\nconst Editor: React.FC<IEditorProps> = ({ markers, mode, onChange, name, wrapEnabled, value, annotations }) => {\n  return (\n    <AceEditor\n      mode={mode}\n      theme='terminal'\n      onChange={onChange}\n      name={name}\n      wrapEnabled={wrapEnabled}\n      value={value}\n      annotations={annotations}\n      markers={markers}\n      style={{ width: '100%', height: '100%' }}\n    />\n  );\n};\n\nexport default Editor;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Grid, Button, Container, Paper, ClickAwayListener, ButtonGroup, Popper, Grow, MenuList, Backdrop, CircularProgress } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { IAnnotation, IMarker } from 'react-ace';\nimport { GraphType, webSvfApiFactory } from '../../api/webSvfApi';\nimport RenderSvg, { IOnGraphClickProps } from '../RenderSvg';\nimport { useSelector } from 'react-redux';\nimport { IStore } from '../../store/store';\nimport Editor from '../Editor';\nimport styled, { css } from 'styled-components';\nimport { IThemeProps } from '../../themes/theme';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Resizable } from 're-resizable';\n\nconst webSvfApi = webSvfApiFactory();\n\nconst graphNames: Record<GraphType, string> = {\n  [GraphType.Callgraph]: 'CallGraph',\n  [GraphType.Icfg]: 'ICFG',\n  [GraphType.Pag]: 'PAG',\n  [GraphType.Svfg]: 'SVFG',\n  [GraphType.Vfg]: 'VFG'\n};\n\nconst HomeWrapper = styled.div`\n  height: calc(100% - ${({ theme }: IThemeProps) => theme.spacing(8)}px);\n  max-height: calc(100% - ${({ theme }: IThemeProps) => theme.spacing(8)}px);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  overflow: scroll;\n`;\n\nconst HomeContainer = styled(Container)`\n  && {\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    padding-top: ${({ theme }: IThemeProps) => theme.spacing(3)}px;\n  }\n`;\n\nconst HomePaper = styled(Paper)`\n  && {\n    height: 100%;\n\n    .ace_editor {\n      border-top-left-radius: 4px;\n      border-top-right-radius: 4px;\n    }\n  }\n`;\n\nconst ScrollablePaper = styled(HomePaper)`\n  && {\n    width: 100%;\n    height: 100%;\n    min-width: 5%;\n    position: relative;\n    overflow: scroll;\n  }\n`;\n\nconst StaticButtonGroup = styled(ButtonGroup)`\n  && {\n    position: sticky;\n    top: 0;\n    left: ${({ theme }: IThemeProps) => theme.spacing(3)}px;\n  }\n`;\n\ninterface IConsoleProps {\n  height?: number;\n}\n\nconst Console = styled.div<IConsoleProps>`\n  background-color: #252a33;\n  color: #fff;\n  padding: 20px;\n  white-space: pre-line;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  ${({ height }) =>\n    height\n      ? css`\n          height: ${height}px;\n        `\n      : css`\n          height: 20%;\n        `}\n  overflow:scroll;\n`;\n\nconst getLogPrefix = () => 'Last updated: ' + new Date();\n\nexport const Analysis: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const editorContainerRef = useRef<HTMLDivElement>(null);\n  const [consoleHeight, setConsoleHeight] = useState<number>();\n  const [logs, setLogs] = useState(getLogPrefix());\n\n  const [editorContent, setEditorContent] = useState('//write your C code here');\n  const selectedFile = useSelector((store: IStore) => store.selectedFile);\n\n  const [anlyseDropdownOpen, setAnlyseDropdownOpen] = useState(false);\n  const analyseDropdownRef = React.useRef(null);\n  const [selectedGraph, setSelectedGraph] = useState<GraphType>(GraphType.Callgraph);\n  const [svgs, setSvgs] = useState<any>();\n\n  useEffect(() => {\n    if (selectedFile?.content) {\n      setEditorContent(selectedFile?.content);\n    }\n  }, [selectedFile?.content]);\n\n  const [output, setOutput] = useState('');\n  const [markers, setMarkers] = useState<IMarker[]>([]);\n  const [annotations, setAnnotations] = useState<IAnnotation[]>([]);\n\n  const onGraphClick = ({ markers, annotations }: IOnGraphClickProps) => {\n    console.log('markers', markers);\n    console.log('annotations', annotations);\n\n    setMarkers(markers);\n    setAnnotations(annotations);\n  };\n\n  const handleClose = (event: React.MouseEvent<Document>) => {\n    if (analyseDropdownRef.current && (analyseDropdownRef.current as any).contains(event.target)) {\n      return;\n    }\n\n    setAnlyseDropdownOpen(false);\n  };\n\n  const onAnalyseClick = async () => {\n    setLoading(true);\n    setAnlyseDropdownOpen(false);\n\n    const { logs, ...rest } = await webSvfApi.analyseAll({ fileName: 'example', code: editorContent });\n    setSvgs(rest);\n\n    setMarkers([]);\n    setAnnotations([]);\n\n    if (logs.basicLog) {\n      setLogs(getLogPrefix() + logs.basicLog);\n    } else if (logs.clangBugLog) {\n      setLogs(getLogPrefix() + logs.clangBugLog);\n    } else if (logs.svfBugLog) {\n      setLogs(getLogPrefix() + logs.svfBugLog);\n    }\n\n    setOutput(rest[selectedGraph]);\n\n    setLoading(false);\n  };\n\n  if (editorContainerRef.current && !consoleHeight) {\n    setConsoleHeight(editorContainerRef.current.getBoundingClientRect().height * 0.2);\n  }\n\n  const onGraphSelection = (graph: GraphType) => {\n    setSelectedGraph(graph);\n    setOutput(svgs[graph]);\n    setAnlyseDropdownOpen(false);\n  };\n\n  return (\n    <HomeWrapper>\n      <HomeContainer maxWidth='xl'>\n        <Grid container spacing={3} style={{ height: '100%', maxHeight: '100%' }}>\n          <div\n            ref={editorContainerRef}\n            style={{\n              height: '100%',\n              width: '100%',\n              display: 'flex',\n              overflow: 'hidden'\n            }}>\n            <Resizable\n              onResize={(e, d, el) => {\n                if (editorContainerRef.current) {\n                  setConsoleHeight(editorContainerRef.current.getBoundingClientRect().height - el.getBoundingClientRect().height);\n                }\n              }}\n              defaultSize={{\n                width: '50%',\n                height: '80%'\n              }}\n              maxHeight='80%'\n              minHeight='10%'\n              maxWidth='80%'\n              minWidth='10%'>\n              <HomePaper>\n                <Editor\n                  mode='c_cpp'\n                  onChange={(value) => setEditorContent(value)}\n                  name='main-editor'\n                  value={editorContent}\n                  annotations={annotations}\n                  markers={markers}\n                />\n              </HomePaper>\n              <Console height={consoleHeight}>{logs}</Console>\n            </Resizable>\n\n            <ScrollablePaper>\n              <StaticButtonGroup variant='contained' color='primary' ref={analyseDropdownRef} aria-label='split button'>\n                <Button onClick={() => onAnalyseClick()}>Analyse</Button>\n                <Button\n                  color='primary'\n                  size='small'\n                  aria-label='select merge strategy'\n                  aria-haspopup='menu'\n                  onClick={() => setAnlyseDropdownOpen((prevOpen) => !prevOpen)}\n                  disabled={!svgs}>\n                  {graphNames[selectedGraph]}\n                  <ArrowDropDownIcon />\n                </Button>\n              </StaticButtonGroup>\n              <Popper open={anlyseDropdownOpen} anchorEl={analyseDropdownRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                  <Grow\n                    {...TransitionProps}\n                    style={{\n                      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n                    }}>\n                    <Paper>\n                      <ClickAwayListener onClickAway={handleClose}>\n                        <MenuList id='split-button-menu'>\n                          {Object.values(GraphType).map((key) => (\n                            <MenuItem key={key} selected={key === selectedGraph} onClick={() => onGraphSelection(key as GraphType)}>\n                              {graphNames[key as GraphType]}\n                            </MenuItem>\n                          ))}\n                        </MenuList>\n                      </ClickAwayListener>\n                    </Paper>\n                  </Grow>\n                )}\n              </Popper>\n\n              {output && <RenderSvg output={output} onGraphClick={onGraphClick} />}\n            </ScrollablePaper>\n          </div>\n        </Grid>\n      </HomeContainer>\n      <Backdrop style={{ zIndex: 1200 }} open={loading}>\n        <CircularProgress />\n      </Backdrop>\n    </HomeWrapper>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Nav = styled.nav`\n  min-height: 10vh;\n\n  #navbar {\n    .btn-primary {\n      margin-right: 1rem;\n    }\n  }\n\n  #navbarNav {\n    margin: auto;\n    justify-content: flex-end;\n  }\n  .navbar-nav {\n    color: #000000;\n  }\n  .nav-link {\n    font-size: large;\n  }\n`;\n\nexport const NavBar: React.FC = () => {\n  return (\n    <Nav className='navbar navbar-expand-lg navbar-light primary-color'>\n      <div id='navbar' className='container'>\n        <Link className='navbar-brand' to='/' replace>\n          <h1\n            style={{\n              fontWeight: 'bold',\n              color: 'black',\n              fontSize: '2em'\n            }}>\n            WebSVF\n          </h1>\n        </Link>\n\n        <span>\n          <button\n            className='navbar-toggler'\n            type='button'\n            data-toggle='collapse'\n            data-target='#navbarNav'\n            aria-controls='navbarNav'\n            aria-expanded='false'\n            aria-label='Toggle navigation'>\n            <span className='navbar-toggler-icon'></span>\n          </button>\n        </span>\n      </div>\n    </Nav>\n  );\n};\n","import React from 'react';\n\nexport interface IDeveloperContributor {\n  link: string;\n  image: string;\n  name: string;\n  university: string;\n  universityLink: string;\n}\nexport interface IDeveloperSupervisor {\n  link: string;\n  image: string;\n  name: string;\n  university: string;\n  universityLink: string;\n  position: string;\n}\n\nexport interface IContributorsProps {\n  heading: string;\n  developers: IDeveloperContributor[];\n  supervisors: IDeveloperSupervisor[];\n}\n\nexport const Contributors: React.FC<IContributorsProps> = ({ heading, developers, supervisors }) => {\n  const mapDevelopers = () => {\n    return developers.map((developer) => (\n      <div key={developer.name} className='col-xl-3'>\n        <div className='testimonial-item mx-auto mb-5 mb-xl-4'>\n          <a href={`${developer.link}`} target='_blank' rel='noopener noreferrer'>\n            <img className='img-fluid rounded-circle mb-3' src={`img/${developer.image}`} alt='' />\n          </a>\n          <h5>{developer.name}</h5>\n          <p className='font-weight-light mb-0'>\n            <strong>Developer</strong>\n            <br />\n            <a href={`${developer.universityLink}`} target='_blank' rel='noopener noreferrer'>\n              {developer.university}\n            </a>\n          </p>\n        </div>\n      </div>\n    ));\n  };\n\n  const mapSupervisors = () => {\n    return supervisors.map((supervisor) => (\n      <div key={supervisor.name} className='col-xl-3'>\n        <div className='testimonial-item mx-auto mb-5 mb-xl-4'>\n          <a href={`${supervisor.link}`}>\n            <img className='img-fluid rounded-circle mb-3' src={`img/${supervisor.image}`} alt='' />\n          </a>\n          <h5>{supervisor.name}</h5>\n          <p className='font-weight-light mb-0'>\n            Project Supervisor <br />\n            <strong style={{ fontWeight: 600 }}>\n              {supervisor.position} <br />\n              <a href={`${supervisor.universityLink}`} target='_blank' rel='noopener noreferrer'>\n                {supervisor.university}\n              </a>\n            </strong>\n          </p>\n        </div>\n      </div>\n    ));\n  };\n\n  return (\n    <section className='testimonials text-center bg-light'>\n      <div className='container'>\n        <h2 className='mb-5'>{heading}</h2>\n        <div className='col-xs-12'>\n          <div className='row'>{mapDevelopers()}</div>\n        </div>\n        <div className='col-xs-12'>\n          <div className='row'>{mapSupervisors()}</div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React, { useState } from 'react';\n\nexport interface IMastHeadProps {\n  onNext: (email: string) => void;\n}\n\nexport const MastHead: React.FC<IMastHeadProps> = ({ onNext }) => {\n  const [email, setEmail] = useState('');\n\n  return (\n    <header id='header-top' className='masthead text-white text-center'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-xl-12 mx-auto'>\n            <h1 className='mb-5 masthead-heading'>\n              <div className='title'>WebSVF:</div>\n              Online Learning and Teaching Platform for Code Analysis\n              <br /> <br />\n              powered by\n              <br />\n              <a className='link' href='https://github.com/SVF-tools/SVF' target='_blank' rel='noopener noreferrer'>\n                SVF-Tools\n              </a>\n              <br />\n              <br />\n              Enter your email to try our demo page\n            </h1>\n          </div>\n          <div className='col-xl-12 d-flex justify-content-center'>\n              <div>\n                <input\n                  type='email'\n                  className='form-control form-control-lg'\n                  placeholder='Enter your email...'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n              <div className='col-12 col-md-3'>\n                <button type='submit' className='btn btn-block btn-lg btn-primary' onClick={() => onNext(email)} disabled={!!email}>\n                  Try WebSVF 2.0 now!\n                </button>\n              </div>\n              <div className='col-12 col-md-3'>\n                <a type='submit' className='btn btn-block btn-lg btn-primary' href=\"http://35.165.134.143/\">\n                  Try WebSVF 3.0 now!\n                </a>\n              </div>\n              <div className='col-12 col-md-3'>\n                <a type='submit' className='btn btn-block btn-lg btn-primary' href=\"http://3.26.130.112/\">\n                  Try WebSVF 4.0 now!\n                </a>\n              </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Contributors } from './components/Contributors';\nimport { MastHead } from './components/MastHead';\nimport data from './static/data.json';\n\nexport interface IAboutProps {\n  onNext: (email: string) => void;\n}\n\nexport const About: React.FC<IAboutProps> = ({ onNext }) => {\n  return (\n    <div>\n      <MastHead onNext={onNext} />\n\n      <Contributors heading={data.contributors.heading} developers={data.contributors.developers} supervisors={data.contributors.supervisors} />\n    </div>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { NavBar } from './NavBar';\nimport './LandingPage.css';\nimport { About } from './About';\n\nconst Container = styled.div`\n  .masthead-heading {\n    font-weight: bold;\n    font-size: 2.5em !important;\n    color: #dadada !important;\n\n    .title {\n      font-weight: bold;\n      color: #4b75ff;\n      font-size: 2.5em;\n    }\n\n    .link {\n      color: #fff;\n      font-weight: bold;\n      text-decoration: underline;\n    }\n  }\n\n  #alertsignup {\n    .highlight {\n      text-decoration: underline;\n    }\n\n    .password {\n      font-weight: bold;\n      color: black;\n    }\n  }\n`;\n\nexport interface ILandingPageProps {\n  onNext: (email: string) => void;\n}\n\nexport const LandingPage: React.FC<ILandingPageProps> = ({ onNext }) => {\n  return (\n    <Container>\n      <NavBar />\n      <About onNext={onNext} />\n    </Container>\n  );\n};\n","import { Route, Switch, useHistory } from 'react-router';\nimport { Layout } from './components/Layout/Layout';\nimport { Analysis } from './components/Pages/Analysis';\nimport { LandingPage } from './components/Pages/LandingPage/LandingPage';\n\nconst ANALYSIS_PATH = '/analysis';\n\nexport const Routes: React.FC = () => {\n  const history = useHistory();\n\n  return (\n    <Switch>\n      <Route path={ANALYSIS_PATH}>\n        <Layout>\n          <Analysis />\n        </Layout>\n      </Route>\n      <Route path='/'>\n        <LandingPage onNext={() => history.push(ANALYSIS_PATH)} />\n      </Route>\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { Providers } from './Providers';\nimport { Routes } from './Routes';\n\nexport const App: React.FC = () => {\n  return (\n    <Providers>\n      <Routes />\n    </Providers>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}