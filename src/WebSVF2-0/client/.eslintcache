[{"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/index.js":"1","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/App.js":"2","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/api/websvf.js":"3","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/RenderSVG/RenderSVG.js":"4","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/index.js":"5","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/Components/AddFile.js":"6","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/Components/FileList.js":"7","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/Editor/Components/Editor.js":"8"},{"size":168,"mtime":1615123060161,"results":"9","hashOfConfig":"10"},{"size":5263,"mtime":1615982573383,"results":"11","hashOfConfig":"10"},{"size":99,"mtime":1615123060161,"results":"12","hashOfConfig":"10"},{"size":2886,"mtime":1615988075151,"results":"13","hashOfConfig":"10"},{"size":5569,"mtime":1615979617199,"results":"14","hashOfConfig":"10"},{"size":1701,"mtime":1615123060161,"results":"15","hashOfConfig":"10"},{"size":2337,"mtime":1615979553610,"results":"16","hashOfConfig":"10"},{"size":764,"mtime":1615123060161,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4y812v",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/index.js",[],["37","38"],"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/App.js",[],"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/api/websvf.js",[],"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/RenderSVG/RenderSVG.js",["39","40","41","42","43"],"import React, { useEffect } from 'react';\nimport ReactHtmlParser, { convertNodeToElement } from 'react-html-parser';\n\nimport './rendersvg.css';\n\nconst transform = (node, index) => {\n  if (node.type === 'tag') {\n    if (node.name === 'svg') {\n      const children = node.children;\n      const { viewbox: viewBox, 'xmlns:xlink': xmlnsXlink, ...rest } = node.attribs;\n\n      return (\n        <svg key={index} viewBox={viewBox} xmlnsXlink={xmlnsXlink} {...rest}>\n          {children.map((x, i) => convertNodeToElement(x, i, transform))}\n        </svg>\n      );\n    }\n\n    if (node.name === 'text') {\n      const child = node.children[0];\n      const { 'text-anchor': textAnchor, 'font-family': fontFamily, 'font-size': fontSize, ...rest } = node.attribs;\n      return (\n        <text key={index} textAnchor={textAnchor} fontFamily={fontFamily} fontSize={fontSize} {...rest}>\n          {convertNodeToElement(child, index, transform)}\n        </text>\n      );\n    }\n\n    if (node.name === 'path') {\n      const { 'stroke-dasharray': strokeDasharray, ...rest } = node.attribs;\n      return <path key={index} strokeDasharray={strokeDasharray} {...rest} />;\n    }\n  }\n};\n\nconst RenderSVG = (props) => {\n  function handleOnClick(e) {\n    var splitString = e.target.innerHTML.split(' ');\n\n    let lineElementIndex = splitString.findIndex((value) => {\n      return value === 'ln:';\n    });\n\n    //ace editor line number starts from 0 although users can see it start from one in frontend\n    var lineNumber = splitString[lineElementIndex + 1] - 1;\n    const markers = [\n      {\n        startRow: lineNumber,\n        endRow: lineNumber + 1,\n        type: 'text',\n        className: 'test-marker'\n      }\n    ];\n    const annotation = [\n      {\n        row: lineNumber,\n        column: 3,\n        text: e.target.innerHTML,\n        type: 'text'\n      }\n    ];\n    props.updateMarker(markers);\n    props.updateAnnotation(annotation);\n  }\n\n  useEffect(() => {\n    if (document.querySelector(`#graph0`)) {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(props.output, 'text/xml');\n\n      let text = Array.from(xmlDoc.getElementsByTagName('g'));\n\n      let filtered = text\n        .filter(\n          (value) =>\n            /\\{[\\s]+ln\\:[\\s]+[0-9]+[\\s]+cl\\:[\\s]+[0-9]+[\\s]+fl\\:[\\s]+[a-z]+\\.c[\\s]+\\}/.test(value.innerHTML) ||\n            /\\{[\\s]+in[\\s]+line\\:[\\s]+[0-9]+[\\s]+file\\:[\\s]+[a-z]+\\.c[\\s]+\\}/.test(value.innerHTML)\n        )\n        .map((value) => {\n          return value.id;\n        });\n\n      filtered.forEach((value) => {\n        if (value !== 'graph0') {\n          document.querySelector(`#${value}`).addEventListener('click', handleOnClick);\n        }\n      });\n    }\n  });\n\n  if (props.output) {\n    let html = props.output;\n\n    return <div>{ReactHtmlParser(html, { transform: transform })}</div>;\n  }\n\n  return <div></div>;\n};\n\nexport default RenderSVG;\n","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/index.js",["44","45","46","47"],"import React, { useState, useEffect } from 'react';\nimport { Paper, Grid, Box } from '@material-ui/core';\nimport AddFile from './Components/AddFile';\nimport FileList from './Components/FileList';\nimport Editor from '../Editor/Components/Editor';\nimport websvf from '../api/websvf';\nimport prettyFormat from 'pretty-format';\nimport './codefiles.css';\n\nconst CodeFiles = ({ code, setCode, markers, annotation }) => {\n  const [response, setResponse] = useState('');\n  const [fileName, setFileName] = useState('');\n  const [dialogBox, setDialogBox] = useState(false);\n  const [project, setProject] = useState([]);\n\n  const [userCode, setUserCode] = useState([\n    {\n      fileID: 'init-temp',\n      fileName: 'example.c',\n      version: '0.0',\n      content: `#include <math.h>\n      #include <stdio.h>\n      int main() {\n          double a, b, c, discriminant, root1, root2, realPart, imagPart;\n          printf(\"Enter coefficients a, b and c: \");\n          scanf(\"%lf %lf %lf\", &a, &b, &c);\n          discriminant = b * b - 4 * a * c;\n          // condition for real and different roots\n          if (discriminant > 0) {\n              root1 = (-b + sqrt(discriminant)) / (2 * a);\n              root2 = (-b - sqrt(discriminant)) / (2 * a);\n              printf(\"root1 = %.2lf and root2 = %.2lf\", root1, root2);\n          }\n          // condition for real and equal roots\n          else if (discriminant == 0) {\n              root1 = root2 = -b / (2 * a);\n              printf(\"root1 = root2 = %.2lf;\", root1);\n          }\n          // if roots are not real\n          else {\n              realPart = -b / (2 * a);\n              imagPart = sqrt(-discriminant) / (2 * a);\n              printf(\"root1 = %.2lf+%.2lfi and root2 = %.2f-%.2fi\", realPart, imagPart, realPart, imagPart);\n          }\n          return 0;\n      } `,\n      files: []\n    }\n  ]);\n  const [selectedFile, setselectedFile] = useState(userCode[0].fileName);\n\n  useEffect(() => {\n    const elementIndex = userCode.findIndex((value) => {\n      return value.fileName === selectedFile;\n    });\n    setCode(userCode[elementIndex].content);\n  }, [selectedFile, userCode]);\n\n  const loadProject = async () => {\n    const response = await websvf.get('/db/getFiles/');\n    if (response) {\n      setProject(response.data.projects[0]);\n      setUserCode(response.data.projects[0].userCode);\n    }\n  };\n\n  const handleAddFile = () => {\n    setUserCode([\n      ...userCode,\n      {\n        fileId: Math.random(),\n        fileName: fileName,\n        version: 0.1,\n        content: `//write your C code here`\n      }\n    ]);\n\n    closeDialog();\n    clearFileName();\n  };\n  const handleFileName = (e) => {\n    setFileName(e.target.value);\n  };\n\n  const openDialog = () => {\n    setDialogBox(true);\n  };\n\n  const closeDialog = () => {\n    setDialogBox(false);\n    clearFileName();\n  };\n\n  const updateSelectedFile = (selectedFileName) => {\n    setselectedFile(selectedFileName);\n  };\n\n  const handleChange = (newValue) => {\n    setCode(newValue);\n\n    const elementIndex = userCode.findIndex((value) => {\n      return value.fileName === selectedFile;\n    });\n    let tempUserCode = [...userCode];\n\n    tempUserCode[elementIndex] = {\n      ...tempUserCode[elementIndex],\n      content: newValue\n    };\n\n    setUserCode(tempUserCode);\n  };\n\n  const clearFileName = () => {\n    setFileName('');\n  };\n\n  const codeSubmit = async () => {\n    const response = await websvf.post(\n      '/db/saveFile/',\n      //`code=${code}&fileName=${selectedFile}&fileVersion=${'1.0'}`,\n      {\n        code: code,\n        fileName: selectedFile,\n        fileVersion: '1.0'\n      }\n    );\n\n    setResponse(prettyFormat(response.data, { escapeString: false }));\n    (async function asyncWorkaround() {\n      await loadProject();\n    })();\n  };\n\n  return (\n    <div>\n      <Box>\n        <Grid container direction='row'>\n          <Grid item>\n            <Paper>\n              <Grid container direction='column' justify='center'>\n                <AddFile\n                  handleAddFile={handleAddFile}\n                  handleFileName={handleFileName}\n                  clearFileName={clearFileName}\n                  fileName={fileName}\n                  userCode={userCode}\n                  openDialog={openDialog}\n                  closeDialog={closeDialog}\n                  dialogBox={dialogBox}\n                />\n                <FileList userCode={userCode} selectedFile={selectedFile} updateSelectedFile={updateSelectedFile} />\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item>\n            {userCode.map((data, index) => {\n              if (data.fileName === selectedFile) {\n                return (\n                  <Editor\n                    key={index}\n                    mode={'c_cpp'}\n                    name={'main-editor'}\n                    value={data.content}\n                    onChange={handleChange}\n                    markers={markers}\n                    annotation={annotation}\n                  />\n                );\n              }\n              return '';\n            })}\n            {/* <Editor value={code} onChange={handleChange} /> */}\n          </Grid>\n        </Grid>\n      </Box>\n      {/* <button onClick={codeSubmit}> Submit </button>\n      <h1>Response from the POST request:</h1>\n      <Editor\n        mode={\"json\"}\n        theme={\"terminal\"}\n        //onChange={onChange}\n        name={\"UNIQUE_ID_OF_DIV1\"}\n        editorProps={{ $blockScrolling: true }}\n        wrapEnabled={true}\n        value={response}\n      /> */}\n    </div>\n  );\n};\n\nexport default CodeFiles;\n","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/Components/AddFile.js",[],"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/Components/FileList.js",[],"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/Editor/Components/Editor.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":76,"column":23,"nodeType":"54","messageId":"55","endLine":76,"endColumn":24,"suggestions":"56"},{"ruleId":"52","severity":1,"message":"53","line":76,"column":43,"nodeType":"54","messageId":"55","endLine":76,"endColumn":44,"suggestions":"57"},{"ruleId":"52","severity":1,"message":"53","line":76,"column":63,"nodeType":"54","messageId":"55","endLine":76,"endColumn":64,"suggestions":"58"},{"ruleId":"52","severity":1,"message":"53","line":77,"column":32,"nodeType":"54","messageId":"55","endLine":77,"endColumn":33,"suggestions":"59"},{"ruleId":"52","severity":1,"message":"53","line":77,"column":54,"nodeType":"54","messageId":"55","endLine":77,"endColumn":55,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":11,"column":10,"nodeType":"63","messageId":"64","endLine":11,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":14,"column":10,"nodeType":"63","messageId":"64","endLine":14,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":57,"column":6,"nodeType":"68","endLine":57,"endColumn":30,"suggestions":"69"},{"ruleId":"61","severity":1,"message":"70","line":118,"column":9,"nodeType":"63","messageId":"64","endLine":118,"endColumn":19},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["73","74"],["75","76"],["77","78"],["79","80"],["81","82"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'project' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCode'. Either include it or remove the dependency array. If 'setCode' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["83"],"'codeSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"84","fix":"85","desc":"86"},{"messageId":"87","fix":"88","desc":"89"},{"messageId":"84","fix":"90","desc":"86"},{"messageId":"87","fix":"91","desc":"89"},{"messageId":"84","fix":"92","desc":"86"},{"messageId":"87","fix":"93","desc":"89"},{"messageId":"84","fix":"94","desc":"86"},{"messageId":"87","fix":"95","desc":"89"},{"messageId":"84","fix":"96","desc":"86"},{"messageId":"87","fix":"97","desc":"89"},{"desc":"98","fix":"99"},"removeEscape",{"range":"100","text":"101"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"102","text":"103"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"104","text":"101"},{"range":"105","text":"103"},{"range":"106","text":"101"},{"range":"107","text":"103"},{"range":"108","text":"101"},{"range":"109","text":"103"},{"range":"110","text":"101"},{"range":"111","text":"103"},"Update the dependencies array to be: [selectedFile, setCode, userCode]",{"range":"112","text":"113"},[2247,2248],"",[2247,2247],"\\",[2267,2268],[2267,2267],[2287,2288],[2287,2287],[2368,2369],[2368,2368],[2390,2391],[2390,2390],[2102,2126],"[selectedFile, setCode, userCode]"]