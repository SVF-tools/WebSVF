[{"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/index.js":"1","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/App.js":"2","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/api/websvf.js":"3","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/index.js":"4","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/RenderSVG/RenderSVG.js":"5","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/Components/FileList.js":"6","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/Components/AddFile.js":"7","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/Editor/Components/Editor.js":"8"},{"size":168,"mtime":1615123060161,"results":"9","hashOfConfig":"10"},{"size":5621,"mtime":1615470802498,"results":"11","hashOfConfig":"10"},{"size":99,"mtime":1615123060161,"results":"12","hashOfConfig":"10"},{"size":5716,"mtime":1615123060161,"results":"13","hashOfConfig":"10"},{"size":2138,"mtime":1615123060161,"results":"14","hashOfConfig":"10"},{"size":2692,"mtime":1615123060161,"results":"15","hashOfConfig":"10"},{"size":1701,"mtime":1615123060161,"results":"16","hashOfConfig":"10"},{"size":764,"mtime":1615123060161,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4y812v",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/index.js",[],["38","39"],"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/App.js",[],"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/api/websvf.js",[],"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/index.js",["40","41","42","43"],"import React, { useState, useEffect } from \"react\";\nimport { Paper, Grid, Box } from \"@material-ui/core\";\n\nimport AddFile from \"./Components/AddFile\";\nimport FileList from \"./Components/FileList\";\nimport Editor from \"../Editor/Components/Editor\";\n\nimport websvf from \"../api/websvf\";\n\nimport prettyFormat from \"pretty-format\";\n\nimport \"./codefiles.css\";\n\nconst CodeFiles = ({ code, setCode, markers,annotation }) => {\n  const [response, setResponse] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [dialogBox, setDialogBox] = useState(false);\n  //const [code, setCode] = useState(`//write your C code here`);\n  const [project, setProject] = useState([]);\n\n  const [userCode, setUserCode] = useState([\n    {\n      fileID: \"init-temp\",\n      fileName: \"example.c\",\n      version: \"0.0\",\n      content: `#include <math.h>\n      #include <stdio.h>\n      int main() {\n          double a, b, c, discriminant, root1, root2, realPart, imagPart;\n          printf(\"Enter coefficients a, b and c: \");\n          scanf(\"%lf %lf %lf\", &a, &b, &c);\n          discriminant = b * b - 4 * a * c;\n          // condition for real and different roots\n          if (discriminant > 0) {\n              root1 = (-b + sqrt(discriminant)) / (2 * a);\n              root2 = (-b - sqrt(discriminant)) / (2 * a);\n              printf(\"root1 = %.2lf and root2 = %.2lf\", root1, root2);\n          }\n          // condition for real and equal roots\n          else if (discriminant == 0) {\n              root1 = root2 = -b / (2 * a);\n              printf(\"root1 = root2 = %.2lf;\", root1);\n          }\n          // if roots are not real\n          else {\n              realPart = -b / (2 * a);\n              imagPart = sqrt(-discriminant) / (2 * a);\n              printf(\"root1 = %.2lf+%.2lfi and root2 = %.2f-%.2fi\", realPart, imagPart, realPart, imagPart);\n          }\n          return 0;\n      } `,\n      files: [],\n    },\n  ]);\n  const [selectedFile, setselectedFile] = useState(userCode[0].fileName);\n\n  useEffect(() => {\n    const elementIndex = userCode.findIndex((value) => {\n      return value.fileName === selectedFile;\n    });\n    setCode(userCode[elementIndex].content);\n  }, [selectedFile, userCode]);\n\n  const loadProject = async () => {\n    const response = await websvf.get(\"/db/getFiles/\");\n    if (response) {\n      setProject(response.data.projects[0]);\n      setUserCode(response.data.projects[0].userCode);\n    }\n  };\n\n  const handleAddFile = () => {\n    setUserCode([\n      ...userCode,\n      {\n        fileId: Math.random(),\n        fileName: fileName,\n        version: 0.1,\n        content: `//write your C code here`,\n      },\n    ]);\n\n    closeDialog();\n    clearFileName();\n  };\n  const handleFileName = (e) => {\n    setFileName(e.target.value);\n  };\n\n  const openDialog = () => {\n    setDialogBox(true);\n  };\n\n  const closeDialog = () => {\n    setDialogBox(false);\n    clearFileName();\n  };\n\n  const updateSelectedFile = (selectedFileName) => {\n    setselectedFile(selectedFileName);\n  };\n\n  const handleChange = (newValue) => {\n    setCode(newValue);\n\n    const elementIndex = userCode.findIndex((value) => {\n      return value.fileName === selectedFile;\n    });\n    let tempUserCode = [...userCode];\n\n    tempUserCode[elementIndex] = {\n      ...tempUserCode[elementIndex],\n      content: newValue,\n    };\n\n    setUserCode(tempUserCode);\n  };\n\n  const clearFileName = () => {\n    setFileName(\"\");\n  };\n\n  const codeSubmit = async () => {\n    const response = await websvf.post(\n      \"/db/saveFile/\",\n      //`code=${code}&fileName=${selectedFile}&fileVersion=${'1.0'}`,\n      {\n        code: code,\n        fileName: selectedFile,\n        fileVersion: \"1.0\",\n      }\n    );\n\n    setResponse(prettyFormat(response.data, { escapeString: false }));\n    (async function asyncWorkaround() {\n      await loadProject();\n    })();\n  };\n\n  return (\n    <div>\n      <Box>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <Paper>\n              <Grid container direction=\"column\" justify=\"center\">\n                <AddFile\n                  handleAddFile={handleAddFile}\n                  handleFileName={handleFileName}\n                  clearFileName={clearFileName}\n                  fileName={fileName}\n                  userCode={userCode}\n                  openDialog={openDialog}\n                  closeDialog={closeDialog}\n                  dialogBox={dialogBox}\n                />\n                <FileList\n                  userCode={userCode}\n                  selectedFile={selectedFile}\n                  updateSelectedFile={updateSelectedFile}\n                />\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item>\n            {userCode.map((data, index) => {\n              if (data.fileName === selectedFile) {\n                return (\n                  <Editor\n                    key={index}\n                    mode={\"c_cpp\"}\n                    name={\"main-editor\"}\n                    value={data.content}\n                    onChange={handleChange}\n                    markers={markers}\n                    annotation = {annotation}\n                  />\n                );\n              }\n              return \"\";\n            })}\n            {/* <Editor value={code} onChange={handleChange} /> */}\n          </Grid>\n        </Grid>\n      </Box>\n      {/* <button onClick={codeSubmit}> Submit </button>\n      <h1>Response from the POST request:</h1>\n      <Editor\n        mode={\"json\"}\n        theme={\"terminal\"}\n        //onChange={onChange}\n        name={\"UNIQUE_ID_OF_DIV1\"}\n        editorProps={{ $blockScrolling: true }}\n        wrapEnabled={true}\n        value={response}\n      /> */}\n    </div>\n  );\n};\n\nexport default CodeFiles;\n","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/RenderSVG/RenderSVG.js",["44","45","46","47","48","49","50"],"import React, { useEffect } from \"react\";\n//import ReactHtmlParser from \"react-html-parser\"; --> issues\nimport ReactHtmlParser from \"react-html-parser\";\n\nimport \"./rendersvg.css\";\n\nconst RenderSVG = (props) => {\n  function handleOnClick(e) {\n    var splitString = e.target.innerHTML.split(\" \");\n\n    let lineElementIndex = splitString.findIndex((value) => {\n      return value === \"ln:\";\n    });\n\n    let colElementIndex = splitString.findIndex((value) => {\n      return value === \"cl:\";\n    });\n\n    //ace editor line number starts from 0 although users can see it start from one in frontend\n    var lineNumber = splitString[lineElementIndex + 1] - 1;\n    var colNumber = splitString[colElementIndex + 1];\n    const markers = [\n      {\n        startRow: lineNumber,\n        endRow: lineNumber + 1,\n        type: \"text\",\n        className: \"test-marker\",\n      },\n    ];\n    const annotation = [\n      {\n        row: lineNumber,\n        column: 3,\n        text: e.target.innerHTML,\n        type: \"text\",\n      },\n    ];\n    props.updateMarker(markers);\n    props.updateAnnotation(annotation);\n  }\n\n  useEffect(() => {\n    if (document.querySelector(`#graph0`)) {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(props.output, \"text/xml\");\n\n      let text = Array.from(xmlDoc.getElementsByTagName(\"g\"));\n\n      let filtered = text\n        .filter(\n          (value) =>\n            /\\{[\\s]+ln\\:[\\s]+[0-9]+[\\s]+cl\\:[\\s]+[0-9]+[\\s]+fl\\:[\\s]+[a-z]+\\.c[\\s]+\\}/.test(\n              value.innerHTML\n            ) ||\n            /\\{[\\s]+in[\\s]+line\\:[\\s]+[0-9]+[\\s]+file\\:[\\s]+[a-z]+\\.c[\\s]+\\}/.test(\n              value.innerHTML\n            )\n        )\n        .map((value) => {\n          return value.id;\n        });\n\n      filtered.forEach((value) => {\n        if (value !== \"graph0\") {\n          var test = document.getElementById(value);\n\n          document\n            .querySelector(`#${value}`)\n            .addEventListener(\"click\", handleOnClick);\n        }\n      });\n    }\n  });\n\n  return (\n    <div>{props.output ? ReactHtmlParser(props.output) : <div></div>}</div>\n  );\n};\n\nexport default RenderSVG;\n","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/Components/FileList.js",["51"],"import React, { useState } from \"react\";\n\nimport {\n  Typography,\n  Grid,\n  List,\n  ListItemIcon,\n  ListItemText,\n  ListItem,\n} from \"@material-ui/core\";\n\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nconst FileList = (props) => {\n  //const [selectedFile, setselectedFile] = useState(props.userCode[0].fileName);\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={5} style={{ padding: \"15px\" }}>\n        <Grid item xs={12}>\n          <Typography variant='h6'>Project: abc</Typography>\n\n          <List>\n            {props.userCode.map((value, index) => {\n              return (\n                <React.Fragment key={index}>\n                  <ListItem\n                    button\n                    // onClick={props.updateSelectedFile}\n                    onClick={() => props.updateSelectedFile(value.fileName)}\n                    selected={props.selectedFile === value.fileName}\n                  >\n                    <ListItemIcon style={{ minWidth: \"20px\" }}>\n                      <FolderIcon style={{ fontSize: \"17px\" }} />\n                      <ArrowRightIcon style={{ fontSize: \"17px\" }} />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={value.fileName}\n                      style={{ margin: \"0\" }}\n                    />\n                  </ListItem>\n                  <List dense style={{ paddingLeft: \"20px\" }}>\n                    {props.userCode.map((value, index) => {\n                      return (\n                        <ListItem\n                          key={`${index}-${index}`}\n                          button\n                          // onClick={props.updateSelectedFile}\n                          onClick={() =>\n                            props.updateSelectedFile(value.fileName)\n                          }\n                          selected={props.selectedFile === value.fileName}\n                        >\n                          <ListItemIcon style={{ minWidth: \"20px\" }}>\n                            <InsertDriveFileIcon style={{ fontSize: \"15px\" }} />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={value.fileName}\n                            style={{ margin: \"0\" }}\n                          />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                </React.Fragment>\n              );\n            })}\n          </List>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default FileList;\n","/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/CodeFiles/Components/AddFile.js",[],"/home/rcruces/Documents/GitHub/WebSVF/src/WebSVF2-0/client/src/Editor/Components/Editor.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":15,"column":10,"nodeType":"58","messageId":"59","endLine":15,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":19,"column":10,"nodeType":"58","messageId":"59","endLine":19,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":62,"column":6,"nodeType":"63","endLine":62,"endColumn":30,"suggestions":"64"},{"ruleId":"56","severity":1,"message":"65","line":123,"column":9,"nodeType":"58","messageId":"59","endLine":123,"endColumn":19},{"ruleId":"56","severity":1,"message":"66","line":21,"column":9,"nodeType":"58","messageId":"59","endLine":21,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":52,"column":23,"nodeType":"69","messageId":"70","endLine":52,"endColumn":24,"suggestions":"71"},{"ruleId":"67","severity":1,"message":"68","line":52,"column":43,"nodeType":"69","messageId":"70","endLine":52,"endColumn":44,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"68","line":52,"column":63,"nodeType":"69","messageId":"70","endLine":52,"endColumn":64,"suggestions":"73"},{"ruleId":"67","severity":1,"message":"68","line":55,"column":32,"nodeType":"69","messageId":"70","endLine":55,"endColumn":33,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"68","line":55,"column":54,"nodeType":"69","messageId":"70","endLine":55,"endColumn":55,"suggestions":"75"},{"ruleId":"56","severity":1,"message":"76","line":65,"column":15,"nodeType":"58","messageId":"59","endLine":65,"endColumn":19},{"ruleId":"56","severity":1,"message":"77","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'project' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCode'. Either include it or remove the dependency array. If 'setCode' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["80"],"'codeSubmit' is assigned a value but never used.","'colNumber' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["81","82"],["83","84"],["85","86"],["87","88"],["89","90"],"'test' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"messageId":"93","fix":"94","desc":"95"},{"messageId":"96","fix":"97","desc":"98"},{"messageId":"93","fix":"99","desc":"95"},{"messageId":"96","fix":"100","desc":"98"},{"messageId":"93","fix":"101","desc":"95"},{"messageId":"96","fix":"102","desc":"98"},{"messageId":"93","fix":"103","desc":"95"},{"messageId":"96","fix":"104","desc":"98"},{"messageId":"93","fix":"105","desc":"95"},{"messageId":"96","fix":"106","desc":"98"},"Update the dependencies array to be: [selectedFile, setCode, userCode]",{"range":"107","text":"108"},"removeEscape",{"range":"109","text":"110"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"111","text":"112"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"113","text":"110"},{"range":"114","text":"112"},{"range":"115","text":"110"},{"range":"116","text":"112"},{"range":"117","text":"110"},{"range":"118","text":"112"},{"range":"119","text":"110"},{"range":"120","text":"112"},[2173,2197],"[selectedFile, setCode, userCode]",[1423,1424],"",[1423,1423],"\\",[1443,1444],[1443,1443],[1463,1464],[1463,1463],[1572,1573],[1572,1572],[1594,1595],[1594,1594]]