#graphviz-container {
  width: 100%;
  height: 100%;
  position: relative;
  background-color: var(--font-size-container-bg-color);
  color: var(--text-color);
}

#graphviz-container svg {
  width: 100%;
  height: 100%;
  /* Ensure the SVG itself picks up themed background */
  background-color: var(--font-size-container-bg-color);
}

/* Graphviz outputs a background polygon inside g.graph; force it to match theme */
#graphviz-container svg g.graph > polygon {
  fill: var(--font-size-container-bg-color) !important;
  stroke: var(--font-size-container-bg-color) !important;
}

/* Make non-node (e.g., edge/cluster) text readable on dark backgrounds.
   Do NOT touch node label text so it keeps good contrast on colored node fills. */
#graphviz-container svg g.edge > text[fill='black'],
#graphviz-container svg g.edge > text[fill='#000'],
#graphviz-container svg g.edge > text[fill='#000000'],
#graphviz-container svg g.cluster > text[fill='black'],
#graphviz-container svg g.cluster > text[fill='#000'],
#graphviz-container svg g.cluster > text[fill='#000000'] {
  fill: var(--text-color);
}

/* Edge lines and arrowheads: recolor default black strokes/fills to themed text color */
#graphviz-container svg g.edge path[stroke='black'],
#graphviz-container svg g.edge path[stroke='#000'],
#graphviz-container svg g.edge path[stroke='#000000'] {
  stroke: var(--text-color);
}

/* Themed empty state for when there is no graph */
.empty-state {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  min-height: 280px;
  width: 100%;
  background: var(--surface);
  color: var(--text-color);
  border: 1px dashed var(--border-color);
  border-radius: 10px;
}

.empty-icon {
  font-size: 42px;
  margin-bottom: 10px;
  opacity: 0.9;
}

.empty-title {
  font-weight: 600;
  margin-bottom: 4px;
}

.empty-subtitle {
  color: var(--text-color);
  opacity: 0.8;
  font-size: 0.95em;
}

#graphviz-container svg g.edge polygon[fill='black'],
#graphviz-container svg g.edge polygon[fill='#000'],
#graphviz-container svg g.edge polygon[fill='#000000'] {
  fill: var(--text-color);
  stroke: var(--text-color);
}

/* Node label text: set readable color ONLY when the node shape has no fill */
#graphviz-container svg g.node > ellipse[fill='none'] ~ text,
#graphviz-container svg g.node > polygon[fill='none'] ~ text,
#graphviz-container svg g.node > path[fill='none'] ~ text {
  fill: var(--text-color);
}

/* Node outlines: keep fills as-is, only adjust default black strokes for visibility */
#graphviz-container svg g.node ellipse[stroke='black'],
#graphviz-container svg g.node ellipse[stroke='#000'],
#graphviz-container svg g.node ellipse[stroke='#000000'],
#graphviz-container svg g.node polygon[stroke='black'],
#graphviz-container svg g.node polygon[stroke='#000'],
#graphviz-container svg g.node polygon[stroke='#000000'],
#graphviz-container svg g.node path[stroke='black'],
#graphviz-container svg g.node path[stroke='#000'],
#graphviz-container svg g.node path[stroke='#000000'] {
  stroke: var(--text-color);
}

#graph-button-container {
  border-top: 1px solid var(--border-color);
  background-color: var(--second-navbar-bg-color);
  padding: 0;
  display: flex;
}

.graph-button {
  padding: 12px 14px;
  background-color: var(--tab-bg);
  color: var(--tab-fg);
  border: 1px solid var(--border-color);
  cursor: pointer;
  font-size: 0.95em;
  box-shadow: none;
  flex: 1 1 0;
  text-align: center;
}

.graph-button:hover {
  background-color: var(--tab-hover-bg);
}

.graph-button.selected {
  background-color: var(--tab-active-bg);
  color: var(--tab-active-fg);
  border-color: var(--tab-active-bg);
}

#graphcontainer-menu-bar {
  margin-top: 0; /* no gap under tabs */
  padding: 8px 10px;
  border-top: 1px solid var(--border-color);
}

#graphcontainer-menu-bar button {
  background: var(--muted);
  color: var(--text-color);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 6px 10px;
  margin-left: 8px;
  cursor: pointer;
}

#graphcontainer-menu-bar button:hover {
  background: var(--primary);
  color: var(--primary-contrast);
  border-color: transparent;
}

/* Fullscreen overlay styling */
.graph-fullscreen-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.6);
  z-index: 2000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.graph-fullscreen-container {
  width: 96vw;
  height: 92vh;
  background: var(--surface);
  color: var(--text-color);
  border: 1px solid var(--border-color);
  border-radius: 10px;
  display: flex;
  flex-direction: column;
}

.graph-fullscreen-header {
  display: flex;
  align-items: center;
  justify-content: flex-end; /* align buttons right */
  padding: 8px 10px;
  border-bottom: 1px solid var(--border-color);
}

.graph-fullscreen-header button {
  background: var(--muted);
  color: var(--text-color);
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 6px 10px;
  margin-left: 8px;
  cursor: pointer;
}

.graph-fullscreen-header button:hover {
  background: var(--primary);
  color: var(--primary-contrast);
  border-color: transparent;
}

.graph-fullscreen-body {
  flex: 1;
  overflow: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--font-size-container-bg-color);
  color: var(--text-color);
}

/* Ensure fullscreen Graphviz SVG uses dark theme variables */
.graph-fullscreen-body svg {
  width: 100%;
  height: 100%;
  background-color: var(--font-size-container-bg-color);
}

.graph-fullscreen-body svg g.graph > polygon {
  fill: var(--font-size-container-bg-color) !important;
  stroke: var(--font-size-container-bg-color) !important;
}

/* Non-node texts (edge/cluster) recolor when Graphviz defaulted to black */
.graph-fullscreen-body svg g.edge > text[fill='black'],
.graph-fullscreen-body svg g.edge > text[fill='#000'],
.graph-fullscreen-body svg g.edge > text[fill='#000000'],
.graph-fullscreen-body svg g.cluster > text[fill='black'],
.graph-fullscreen-body svg g.cluster > text[fill='#000'],
.graph-fullscreen-body svg g.cluster > text[fill='#000000'] {
  fill: var(--text-color);
}

/* Edge strokes and arrowheads */
.graph-fullscreen-body svg g.edge path[stroke='black'],
.graph-fullscreen-body svg g.edge path[stroke='#000'],
.graph-fullscreen-body svg g.edge path[stroke='#000000'] {
  stroke: var(--text-color);
}

.graph-fullscreen-body svg g.edge polygon[fill='black'],
.graph-fullscreen-body svg g.edge polygon[fill='#000'],
.graph-fullscreen-body svg g.edge polygon[fill='#000000'] {
  fill: var(--text-color);
  stroke: var(--text-color);
}

/* Node outlines (keep fill) */
.graph-fullscreen-body svg g.node ellipse[stroke='black'],
.graph-fullscreen-body svg g.node ellipse[stroke='#000'],
.graph-fullscreen-body svg g.node ellipse[stroke='#000000'],
.graph-fullscreen-body svg g.node polygon[stroke='black'],
.graph-fullscreen-body svg g.node polygon[stroke='#000'],
.graph-fullscreen-body svg g.node polygon[stroke='#000000'],
.graph-fullscreen-body svg g.node path[stroke='black'],
.graph-fullscreen-body svg g.node path[stroke='#000'],
.graph-fullscreen-body svg g.node path[stroke='#000000'] {
  stroke: var(--text-color);
}

/* Only recolor labels for nodes without a fill to keep contrast */
.graph-fullscreen-body svg g.node > ellipse[fill='none'] ~ text,
.graph-fullscreen-body svg g.node > polygon[fill='none'] ~ text,
.graph-fullscreen-body svg g.node > path[fill='none'] ~ text {
  fill: var(--text-color);
}
