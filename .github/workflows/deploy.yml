name: Deploy All Services

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  # Deploy Frontend to GitHub Pages
  deploy-frontend:
    name: Deploy Frontend to GitHub Pages
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Validate (lint, types, format)
        run: npm run validate

      - name: Build application
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist
          clean: true

  # Deploy API to Fly.io (only if api directory exists and has changes)
  deploy-api:
    name: Deploy API to Fly.io
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if API directory exists
        id: check_api
        run: |
          if [ -d "api" ]; then
            echo "api_exists=true" >> $GITHUB_OUTPUT
          else
            echo "api_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.check_api.outputs.api_exists == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python tooling
        if: steps.check_api.outputs.api_exists == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy

      - name: Ruff (lint)
        if: steps.check_api.outputs.api_exists == 'true'
        working-directory: ./api
        run: ruff check .

      - name: Mypy (type-check)
        if: steps.check_api.outputs.api_exists == 'true'
        working-directory: ./api
        run: mypy .

      - name: Setup Fly.io CLI
        if: steps.check_api.outputs.api_exists == 'true' && secrets.FLY_API_TOKEN != ''
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        if: steps.check_api.outputs.api_exists == 'true' && secrets.FLY_API_TOKEN != ''
        run: flyctl deploy --remote-only --app api-broken-moon-5814
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        working-directory: ./api
