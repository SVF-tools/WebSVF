name: Deploy to Production
on:
  push:
    branches:
      - master
jobs:
  install:
    name: Install dependencies
    if: "!contains(github.event.commits[0].message, 'Version Bump')"
    runs-on: ubuntu-latest

    steps:
      - name: Set up registry
        uses: actions/setup-node@v2
        with:
          node-version: '15.x'
          registry-url: 'https://npm.pkg.github.com'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        env:
          cache-name: ${{ github.event.repository.name }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-${{ github.event.repository.name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Automated Version Bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          tag-prefix: 'v'
          commit-message: 'Version Bump {{version}}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install packages
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: |
          npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Set up registry
        uses: actions/setup-node@v2
        with:
          node-version: '15.x'
          registry-url: 'https://npm.pkg.github.com'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Cache node modules
        id: cache-modules
        uses: actions/cache@v2
        env:
          cache-name: ${{ github.event.repository.name }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-${{ github.event.repository.name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'

      - name: Build
        run: |
          npm run build
          echo ${{ steps.version.outputs.prop }}${{ github.run_number }}-${{ github.head_ref }} > build/version.txt

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: 'build'
